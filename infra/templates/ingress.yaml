{{- if .Values.monitoring.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring-ingress
  namespace: monitoring
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: auth-oauth-errors@kubernetescrd, auth-oauth2-proxy@kubernetescrd
    ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - secretName: tls-monitoring
  rules:
  - host: alertmanager.toliveistolearn.com
    http:
      paths:
        - path: /
          pathType: ImplementationSpecific
          backend:
            service:
              name: http-echo
              port:
                number: 8080
  - host: grafana.toliveistolearn.com
    http:
      paths: 
        - path: /
          pathType: ImplementationSpecific
          backend:
            service:
              name: monitoring-kube-prometheus-stack-grafana
              port:
                number: 80
{{- end }}
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: prometheus-ingress
spec:
  tls:
    secretname: tls-monitoring
  entryPoints:
    - websecure
  routes:
  - match: Host(`prometheus.toliveistolearn.com`) && ! HeadersRegexp(`X-Auth-Request-Email`, '.*')
    kind: Rule
    # (optional) Priority disambiguates rules of the same length, for route matching.
    services:
    - name: monitoring-prometheus
      port: 9090
    middlewares:
      - name: oauth-erorrs
        namespace: auth
      - name: oauth2-proxy
        namespace: auth
  - match: Host(`prometheus.toliveistolearn.com`) && ( Headers(`X-Auth-Request-Email`, 'admin@societatea-hermes.ro'))
    kind: Rule
    # (optional) Priority disambiguates rules of the same length, for route matching.
    services:
    - name: monitoring-prometheus
      port: 9090
    middlewares:
      - name: oauth-erorrs
        namespace: auth
      - name: oauth2-proxy
        namespace: auth
      