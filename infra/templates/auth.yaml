# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: traefik-ingress
#   namespace: 
# spec:
#   routes:
#     - match: "Host(`my.host.name`) && PathPrefix(`/oauth2`)"
#       kind: Rule
#       services:
#         - name: oauth2-proxy
#           namespace: my-namespace
#           port: 4180
#       middlewares:
#         - name: oauth-errors
#     - match: Host(`my.host.name`)
#       kind: Rule
#       middlewares:
#         - name: oauth-errors
#         - name: oauth2-proxy
#       services:
#         - name: my-app
#           port: http
# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: Middleware
# metadata:
#   name: oauth-errors
# spec:
#   errors:
#     status:
#       - "401-403"
#     service:
#       name: oauth2-proxy
#       port: 4180
#     query: "/oauth2/sign_in"
# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: Middleware
# metadata:
#   name: oauth2-proxy
#   namespace: my-namespace
# spec:
#   forwardAuth:
#     address: http://oauth2-proxy.my-namespace.svc:4180/oauth2/auth
#     trustForwardHeader: true
#     authResponseHeaders:
#       - X-Auth-Request-User
#       - Set-Cookie
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     app: oauth2-proxy
#   name: oauth2-proxy
#   namespace: my-namespace
# spec:
#   type: ClusterIP
#   ports:
#   - name: http
#     port: 4180
#     protocol: TCP
#     targetPort: 4180
#   selector:
#     k8s-app: oauth2-proxy
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     k8s-app: oauth2-proxy
#   name: oauth2-proxy
#   namespace: my-namespace
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       k8s-app: oauth2-proxy
#   template:
#     metadata:
#       labels:
#         k8s-app: oauth2-proxy
#     spec:
#       containers:
#       - args:
#         - --provider=oidc
#         - --oidc-issuer-url=[OIDC Issuer URL here]
#         - --email-domain=*
#         - --upstream=file:///dev/null
#         - --http-address=0.0.0.0:4180
#         - --pass-user-headers=true
#         - --set-authorization-header=true
#         - --set-xauthrequest=true
#         - --reverse-proxy=true
#         env:
#           - name: OAUTH2_PROXY_CLIENT_ID
#             valueFrom:
#               secretKeyRef:
#                 name: auth-env
#                 key: OAUTH2_PROXY_CLIENT_ID
#           - name: OAUTH2_PROXY_CLIENT_SECRET
#             valueFrom:
#               secretKeyRef:
#                 name: auth-env
#                 key: OAUTH2_PROXY_CLIENT_SECRET
#           - name: OAUTH2_PROXY_COOKIE_SECRET
#             valueFrom:
#               secretKeyRef:
#                 name: auth-env
#                 key: OAUTH2_PROXY_COOKIE_SECRET
#         image: quay.io/oauth2-proxy/oauth2-proxy:latest
#         imagePullPolicy: Always
#         name: oauth2-proxy
#         ports:
#         - containerPort: 4180
#           protocol: TCP