#!/bin/bash
# these are going to be replaced by the terraform script
[ENVIRONMENT_VARIABLES]
if [ "$VAR_NODE_TYPE" == "master" ] 
then
  # install dependencies
  apt-get update
  apt-get install git -y
fi

if [ "$VAR_NODE_TYPE" == "master" ] || [ "$VAR_NODE_TYPE" == "normal" ] 
then
  if ! [ -e "/data/ssd" ]
  then
    # this formats and mounts the secondary disk to /data/ssd
    mkdir -p /data/ssd

    while [ ! -e /dev/sdb ]; do sleep 10; done
    echo ',,linux' | sfdisk /dev/sdb
    mkfs.ext4 /dev/sdb1
    echo '/dev/sdb1 /data/ssd ext4 defaults 0 0' >> /etc/fstab
    systemctl daemon-reload
    mount -a
  fi
fi

cat > /usr/bin/k3s-startup.sh <<'END'
#!/bin/bash

# these are going to be replaced by the terraform script
[ENVIRONMENT_VARIABLES]

if [ "$VAR_NODE_TYPE" == "master" ] 
then

# create needed folders
mkdir -p /etc/rancher/k3s

# setup k3s configuration file
cat > /etc/rancher/k3s/config.yaml <<EOF
write-kubeconfig-mode: "0644"
node-label: 
  - type=$VAR_NODE_TYPE
disable:
  - traefik
disable-helm-controller: true
EOF

else

# create needed folders
mkdir -p /etc/rancher/k3s

# setup k3s configuration file
cat > /etc/rancher/k3s/config.yaml <<EOF
node-label: 
  - type=$VAR_NODE_TYPE
EOF

fi

if [ "$VAR_NODE_TYPE" == "master" ] 
then
# this installs k3s; the token is generated by the terraform script
curl -sfL https://get.k3s.io | K3S_TOKEN=$VAR_K3S_TOKEN sh -s

# installs argocd
git clone https://github.com/Societatea-Hermes/hermes-on-kubernetes.git --branch main
kubectl apply -f ./hermes-on-kubernetes/helmcharts/infra/argocd/base/namespace.yaml
kubectl apply -f ./hermes-on-kubernetes/helmcharts/infra/argocd/base/install.yaml -n argocd
kubectl apply -f ./hermes-on-kubernetes/helmcharts/infra/argocd/base/master-app.yaml -n argocd

rm -rf hermes-on-kubernetes

# make the storage class only use the secondary disk
sed -i 's/"paths":\[.*\]/"paths":["\/data\/ssd"]/' /var/lib/rancher/k3s/server/manifests/local-storage.yaml

kubectl apply -f - <<EOF
apiVersion: v1
kind: Secret
metadata:
  name: github-ssh-key
  namespace: argocd
  labels:
    argocd.argoproj.io/secret-type: repository
data:
  url: $(echo -n git@github.com:Societatea-Hermes/hermes-on-kubernetes-secrets.git | base64 -w0)
  type: $(echo -n git | base64 -w0)
  sshPrivateKey: $VAR_GITHUB_SSH_KEY
EOF

# update kubeconfig
mkdir -p ~/.kube
cp /etc/rancher/k3s/k3s.yaml ~/.kube/config

else

curl -sfL https://get.k3s.io | K3S_URL=https://$VAR_MASTER_NAME:6443 K3S_TOKEN=$VAR_K3S_TOKEN sh -s

fi
END

chmod +x /usr/bin/k3s-startup.sh

cat > /lib/systemd/system/k3s-startup.service <<'END'
[Unit]
Description=K3s startup script

[Service]
ExecStart=/usr/bin/k3s-startup.sh

[Install]
WantedBy=multi-user.target
END

systemctl daemon-reload && systemctl enable k3s-startup && systemctl start k3s-startup

# install debugging tools
if [ "$VAR_NODE_TYPE" == "master" ] 
then
  curl -sS https://webinstall.dev/k9s | bash && source ~/.config/envman/PATH.env
fi